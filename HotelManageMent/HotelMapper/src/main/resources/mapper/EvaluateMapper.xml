<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czl.mapper.EvaluateMapper" >
  <resultMap id="BaseResultMap" type="com.czl.pojo.Evaluate" >
    <id column="evaluateID" property="evaluateid" jdbcType="INTEGER" />
    <result column="evaluateContent" property="evaluatecontent" jdbcType="VARCHAR" />
    <result column="replycontent" property="replycontent" jdbcType="VARCHAR" />
    <result column="orderNumber" property="ordernumber" jdbcType="VARCHAR" />
    <result column="TypeId" property="typeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    evaluateID, evaluateContent, replycontent, orderNumber, TypeId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.czl.pojo.EvaluateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from evaluate
    where evaluateID = #{evaluateid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from evaluate
    where evaluateID = #{evaluateid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.czl.pojo.EvaluateExample" >
    delete from evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czl.pojo.Evaluate" >
    insert into evaluate (evaluateID, evaluateContent, replycontent, 
      orderNumber, TypeId)
    values (#{evaluateid,jdbcType=INTEGER}, #{evaluatecontent,jdbcType=VARCHAR}, #{replycontent,jdbcType=VARCHAR}, 
      #{ordernumber,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czl.pojo.Evaluate" >
    insert into evaluate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="evaluateid != null" >
        evaluateID,
      </if>
      <if test="evaluatecontent != null" >
        evaluateContent,
      </if>
      <if test="replycontent != null" >
        replycontent,
      </if>
      <if test="ordernumber != null" >
        orderNumber,
      </if>
      <if test="typeid != null" >
        TypeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="evaluateid != null" >
        #{evaluateid,jdbcType=INTEGER},
      </if>
      <if test="evaluatecontent != null" >
        #{evaluatecontent,jdbcType=VARCHAR},
      </if>
      <if test="replycontent != null" >
        #{replycontent,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czl.pojo.EvaluateExample" resultType="java.lang.Integer" >
    select count(*) from evaluate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update evaluate
    <set >
      <if test="record.evaluateid != null" >
        evaluateID = #{record.evaluateid,jdbcType=INTEGER},
      </if>
      <if test="record.evaluatecontent != null" >
        evaluateContent = #{record.evaluatecontent,jdbcType=VARCHAR},
      </if>
      <if test="record.replycontent != null" >
        replycontent = #{record.replycontent,jdbcType=VARCHAR},
      </if>
      <if test="record.ordernumber != null" >
        orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        TypeId = #{record.typeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update evaluate
    set evaluateID = #{record.evaluateid,jdbcType=INTEGER},
      evaluateContent = #{record.evaluatecontent,jdbcType=VARCHAR},
      replycontent = #{record.replycontent,jdbcType=VARCHAR},
      orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      TypeId = #{record.typeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.czl.pojo.Evaluate" >
    update evaluate
    <set >
      <if test="evaluatecontent != null" >
        evaluateContent = #{evaluatecontent,jdbcType=VARCHAR},
      </if>
      <if test="replycontent != null" >
        replycontent = #{replycontent,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null" >
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        TypeId = #{typeid,jdbcType=INTEGER},
      </if>
    </set>
    where evaluateID = #{evaluateid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czl.pojo.Evaluate" >
    update evaluate
    set evaluateContent = #{evaluatecontent,jdbcType=VARCHAR},
      replycontent = #{replycontent,jdbcType=VARCHAR},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      TypeId = #{typeid,jdbcType=INTEGER}
    where evaluateID = #{evaluateid,jdbcType=INTEGER}
  </update>
</mapper>